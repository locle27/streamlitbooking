# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
dist/
downloads/
eggs/
.eggs/
lib/
lib60/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a script prior to PyInstaller running freezing an application
#  and hence they will be present in the VCS Client.
#  Alternatively, PyInstaller will generate files for deploying an application.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot
*.po

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or application, you probably want to ignore these files since the dependencies virtualization
#   logic is specific to your environment; otherwise, consider adding them:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#.pdm.toml
#.pdm-python

# PEP 582; automatically picks up projects managed by poetry, pdm, flit, etc.
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
venv/
ENV/
env/
ENV.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Romerillo files (Romerillo)
.*_project

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static analyzer
.pytype/

# Cython debug symbols
cython_debug/

# VSCode settings
.vscode/

# Secrets - BE CAREFUL with this one if you have legitimate secrets you NEED to commit for some reason
# Generally, secrets should NOT be in version control.
# *.json  <-- Your streamlit-api-*.json IS a secret. Don't uncomment this broadly without thought.
# *.env
secrets/
*.pem
*.key

# Specific to your project (if needed)
# streamlit-api-461302-5dfbcb4beaba.json # Explicitly ignore if you want to be sure, though it's better handled by not adding it with `git add` 
streamlit-api-461302-5dfbcb4beaba.json
*.pyc 